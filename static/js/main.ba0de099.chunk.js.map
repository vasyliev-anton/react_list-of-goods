{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","this","goods","visibleGoods","sort","a","b","length","reverse","getReorderedGoods","className","type","classNames","ALPHABET","onClick","setState","forceUpdate","LENGTH","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZE,EA9BH,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAUzB,OARiB,IAAbJ,GACFK,EAAaC,OAGE,IAAbN,GACFK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAGpCP,EAAaG,EAAaK,UAAYL,EAgB7BM,CAAkBd,EAAiB,CAAEG,WAAUE,eAE7D,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYd,IAAaJ,EAASmB,WACtCC,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUJ,EAASmB,WACnC,EAAKG,eANT,iCAYA,wBACEL,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYd,IAAaJ,EAASuB,SACtCH,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUJ,EAASuB,SACnC,EAAKD,eANT,4BAYA,wBACEL,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAA2B,IAAfZ,IAChBc,QAAS,WACP,EAAKC,SAAS,CAAEf,YAAaA,IAC7B,EAAKgB,eANT,sBAYe,IAAblB,GAAkBE,IAClB,wBACEW,KAAK,SACLD,UAAU,4BACVI,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUJ,EAASK,OACnC,EAAKgB,SAAS,CAAEf,YAAY,IAC5B,EAAKgB,eANT,sBAcJ,6BACGd,EAAMgB,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAjEtD,GAAyBC,aChDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba0de099.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === 1) {\n    visibleGoods.sort();\n  }\n\n  if (sortType === 2) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n              this.forceUpdate();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n              this.forceUpdate();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': isReversed !== true })}\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n              this.forceUpdate();\n            }}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== 0 || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ sortType: SortType.NONE });\n                this.setState({ isReversed: false });\n                this.forceUpdate();\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}